@model IEnumerable<Adoptapal.Business.Definitions.Animal>

@{
    ViewData["Title"] = "Home Page";
    var userId = Context.Session.GetString("UserId");
}

<link rel="stylesheet" href="~/css/accountForms.css" asp-append-version="true" />

<h1>Home</h1>

<form asp-action="Index" method="get" class="filter-form">
    <div class="row align-items-center">
        <div class="col-md-3 mb-3">
            <label for="AnimalCategory">Animal Category:</label>
            <select name="AnimalCategory" class="form-control">
                <option value="@ViewData["AnimalCategoryFilter"]" selected>@ViewData["AnimalCategoryFilter"]</option>
                <option value="">All</option>
                <option value="Dog">Dog</option>
                <option value="Cat">Cat</option>
                <option value="Bird">Bird</option>
                <option value="Rabbit">Rabbit</option>
                <option value="Fish">Fish</option>
                <option value="Hamster">Hamster</option>
                <option value="GuineaPig">Guinea Pig</option>
                <option value="Reptile">Reptile</option>
                <option value="Other">Other</option>
            </select>
        </div>
        <div class="col-md-3 mb-3">
            <label for="IsMale">Gender:</label>
            <select name="IsMale" class="form-control">
                <option value="@ViewData["IsMaleValue"]" selected>@ViewData["IsMaleFilter"]</option>
                <option value="">All</option>
                <option value="true">Male</option>
                <option value="false">Female</option>
            </select>
        </div>
        <div class="col-md-3 mb-3">
            <label for="Birthday">Birthday:</label>
            <input type="date" name="Birthday" value="@ViewData["BirthdayFilter"]" class="form-control" />
        </div>
        <div class="col-md-3 mb-3">
            <label>&nbsp;</label>
            <button type="submit" class="btn btn-primary btn-block">Search</button>
        </div>
    </div>
</form>


<hr />

<div class="row justify-content-center">
    @foreach (var item in Model)
    {
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="text-center">
                        <img src="~/images/@item.ImageFilePath" alt="Generic placeholder image" class="img-fluid img-thumbnail mt-4 mb-2" style="width: 100%; height: 300px; z-index: 1">
                    </div>

                    <div class="text-center">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                        <p class="card-text">Sex: @(item.IsMale.HasValue && item.IsMale.Value ? "Male" : "Female")</p>
                    </div>

                    <div class="text-center mt-3">
                        <a asp-action="Details" asp-controller="Animals" asp-route-id="@item.Id" class="btn btn-secondary">Details</a>
                        @{
                            if (userId != null)
                            {
                                <a id="favorite-btn-@item.Id"
                                   asp-action="AddToFavorite"
                                   asp-controller="Home"
                                   asp-route-animalId="@item.Id"
                                   class="btn btn-link favorite-icon"
                                   onclick="toggleFavorite(@item.Id)">
                                    <i class="far fa-heart"></i>
                                </a>
                            }
                        }

                    </div>
                </div>

            </div>
        </div>
    }
</div>


<script src="~/lib/leaflet/leaflet.js"></script>
<script src="~/lib/leaflet/leaflet.min.js"></script>

<div id="map" style="width:100%;height:400px"></div>

@section Scripts {
    <script>
        function toggleFavorite(animalId) {
            alert("HI!");
            var btn = document.getElementById('favorite-btn-' + animalId);
            var icon = btn.querySelector('i');

            if (icon.classList.contains('far')) {
                icon.classList.remove('far');
                icon.classList.add('fas');
            } else {
                icon.classList.remove('fas');
                icon.classList.add('far');
            }
        }
    </script>
}


<script>
    var map = L.map('map').fitWorld();

    // map settings
    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '© OpenStreetMap'
    }).addTo(map);

    map.locate({ setView: true, maxZoom: 16 });

    function onLocationFound(e) {
        var radius = e.accuracy;

        L.marker(e.latlng).addTo(map)
            .bindPopup("You are within " + radius + " meters from this point").openPopup();

        L.circle(e.latlng, radius).addTo(map);
    }

    map.on('locationfound', onLocationFound);

    function onLocationError(e) {
        alert(e.message);
    }

    map.on('locationerror', onLocationError);

    // marker settings
    var marker = L.marker([51.5, -0.09]).addTo(map);
    marker.bindPopup("<b>Hello world!</b><br>I am a popup.").openPopup();

    var popup = L.popup()
        .setLatLng([51.513, -0.09])
        .setContent("I am a standalone popup.")
        .openOn(map);

    function onMapClick(e) {
        alert("You clicked the map at " + e.latlng);
    }

    map.on('click', onMapClick);

    var popup = L.popup();

    function onMapClick(e) {
        popup
            .setLatLng(e.latlng)
            .setContent("You clicked the map at " + e.latlng.toString())
            .openOn(map);
    }

    map.on('click', onMapClick);

    // TODO: animal location 
    var jsModel = @Html.Raw(Json.Serialize(Model));
    console.log(jsModel);

    for (i in jsModel)
    {
        item = jsModel[i]
        L.marker([item.lat, item.long]).addTo(map)
            .bindPopup(item.name);
    }

</script>